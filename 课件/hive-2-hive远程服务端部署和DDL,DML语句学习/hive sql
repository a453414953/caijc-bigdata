create table psn
(
id int,
name string,
likes array<string>,
address map<string,string>
)
row format delimited
fields terminated by ','
collection items terminated by '-'
map keys terminated by ':';

load data local inpath '/root/data/data' into table psn;

create table psn3
(
id int,
name string,
likes array<string>,
address map<string,string>
)
row format delimited
fields terminated by '\001'
collection items terminated by '\002'
map keys terminated by '\003';

hive在默认情况下创建的是内部表，如何创建外部表？

内外部表的区别？
1、内部表创建的时候，数据存储在hive的默认目录中，外部表创建的时候需要制定external的关键字同时需要制定location，制定存储目录
2、内部表在进行删除的时候，将数据和元数据全部删除，外部表在删除的时候只会删除元数据，不会删除数据
应用场景：
	内部表，先创建表，在添加数据
	外部表，可以先创建表，添加数据也可以先添加数据，再创建表
根据公司的业务来决定，但是外部表确实用的比较多

create external table psn4
(
id int,
name string,
likes array<string>,
address map<string,string>
)
row format delimited
fields terminated by ','
collection items terminated by '-'
map keys terminated by ':'
location '/data';

分区表：

当创建的分区表包含多个分区列的时候，插入数据的时候必须要将所有的分区列都添加值，不可以只写其中一个，分区列的顺序无所谓
当需要单独添加分区列的时候，必须要添加所有的分区列。
当删除表的分区列的值得时候，可以只制定一个分区列，会把当前表的所有满足条件的分区列都删除
当前处理方式存在问题？
	当数据进入hive的时候，需要根据数据的某一个字段想hive表插入数据，此时无法满足需求，因此需要使用动态分区
当hdfs目录中存在数据，并且符合分区的格式，此时创建外部表的时候，一定要修复分区才可以查询到对应的结果，否则是没有结果的
create table psn5
(
id int,
name string,
likes array<string>,
address map<string,string>
)
partitioned by(gender string)
row format delimited
fields terminated by ','
collection items terminated by '-'
map keys terminated by ':';

create table psn6
(
id int,
name string,
likes array<string>,
address map<string,string>
)
partitioned by(gender string,age int)
row format delimited
fields terminated by ','
collection items terminated by '-'
map keys terminated by ':';

create external table psn7
(
id int,
name string,
likes array<string>,
address map<string,string>
)
partitioned by(age int)
row format delimited
fields terminated by ','
collection items terminated by '-'
map keys terminated by ':'
location '/msb';

create table psn8
(
id int,
name string,
likes array<string>,
address map<string,string>
)
row format delimited
fields terminated by ','
collection items terminated by '-'
map keys terminated by ':'
location '/msb';


----------DML----------
create table psn9
(
id int,
name string
)
row format delimited
fields terminated by ','
collection items terminated by '-'
map keys terminated by ':';

create table psn10
(
id int
);



INSERT OVERWRITE TABLE psn9
SELECT id,name FROM psn

from psn
insert overwrite table psn9
select id,name 
insert into table psn10
select id






















